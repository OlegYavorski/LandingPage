{"version":3,"sources":["logo.svg","components/Backdrop/Backdrop.js","components/Button/Button.js","components/Modal/Modal.js","components/Input/Input.js","components/Products/ProductItem/ProductItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","backdrop","props","react_default","a","createElement","className","show","button","Object","assign","children","modal","concat","open","title","Button_Button","type","onClick","onClose","input","inputElement","config","onChange","elType","label","productItem","style","backgroundImage","imageUrl","price","text","onDelete","bind","id","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isAuth","authMode","error","productDeleteHandler","productId","alert","inputChangeHandler","event","setState","defineProperty","target","value","errorHandler","message","console","log","_this2","Backdrop_Backdrop","src","logo","alt","href","Modal_Modal","Input_Input","ProductItem_ProductItem","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a297776c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nimport './Backdrop.css'\n\nconst backdrop = props => <div className={props.show ? 'backdrop show' : 'backdrop'} />;\n\nexport default backdrop;\n\n// 099-621-02-69 Саша Медитация","import React from 'react';\n\nimport './Button.css';\n\nconst button = props => <button className=\"button\" {...props}>{props.children}</button>;\n\nexport default button;\n","import React from 'react';\n\nimport './Modal.css';\nimport Button from '../Button/Button';\n\nconst modal = props => (\n    <div className={`modal ${props.open ? 'open' : ''}`}>\n        <header className=\"modal__header\">\n            <h1>{props.title}</h1>\n        </header>\n        <section className=\"modal__content\">\n            {props.children}\n        </section>\n        <section className=\"modal__actions\">\n            <Button type=\"button\" onClick={props.onClose}>Okay</Button>\n        </section>\n    </div>\n);\n\nexport default modal;","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => {\n  let inputElement = <input {...props.config} onChange={props.onChange} />;\n  if (props.elType === 'textarea') {\n    inputElement = <textarea {...props.config} onChange={props.onChange} />;\n  }\n  return (\n    <div className=\"input\">\n      <label>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ProductItem.css';\n\n\nconst productItem = props => (\n  <article className=\"product-item\">\n    <div\n      className=\"product-item__image\"\n      style={{ backgroundImage: \"url('\" + props.imageUrl + \"')\" }}\n    />\n    <div className=\"product-item__content\">\n      <h1>{props.title}</h1>\n      <h2>${props.price}</h2>\n      <p>{props.text}</p>\n      <div className=\"product-item__controls\">\n        {/* <Link to={'/products/' + props.id}>Details</Link>\n        <Link to={'/products/' + props.id + '/edit'}>Edit</Link> */}\n        <button onClick={props.onDelete.bind(this, props.id)}>Delete</button>\n      </div>\n    </div>\n  </article>\n);\n\nexport default productItem;\n","import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Backdrop from \"./components/Backdrop/Backdrop\";\nimport Button from './components/Button/Button';\nimport Modal from \"./components/Modal/Modal\";\nimport Input from './components/Input/Input';\nimport ProductItem from './components/Products/ProductItem/ProductItem';\nimport { Link } from 'react-router-dom';\n\n\nclass App extends Component {\n  \n   state = {\n    // isAuth: true,\n    isAuth: false,\n    authMode: \"login\",\n    error : null \n    //error: 'Test for error'\n  };\n\n  constructor() {\n    super();\n    // this.client = Stitch.initializeDefaultAppClient(\"processstudio-lwtbf\");\n    console.log('constructor !!!')\n    // this.client.callFunction('Greet', ['Max']);\n  }\n  \n  productDeleteHandler = productId => {\n    alert('productDeleteHandler')\n  };\n\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n\n  errorHandler = message => {\n    this.setState({\n      error: message\n    });\n  };\n\nrender() {  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <Backdrop show={!!this.state.error} />\n        <Button type=\"button\">Okay1</Button>\n\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a className=\"App-link\" href = \"E:\\GitHub\\LandingPage\">E:\\GitHub\\LandingPage\\</a>\n        <a className=\"App-link\" href=\"E:\\landingpage\">E:\\landingpage</a>\n        <a className=\"App-link\" href=\"E:\\MyMongoDB\">E:\\MyMongoDB</a>\n        <a className=\"App-link\" href=\"E:\\MongoUdemyMax/18\\stitch-01-starting-code\">E:\\MongoUdemyMax/18\\stitch-01-starting-code</a>\n        \n      </header>\n      <Modal\n          open={!!this.state.error}\n          title=\"An Error Occurred\"\n          onClose={() => this.errorHandler(null)}\n        >\n          <p>{this.state.error}</p>\n        </Modal>\n\n        <Input\n            label=\"E-Mail\"\n            config={{ type: 'email' }}\n            onChange={event => this.inputChangeHandler(event, 'email')}\n          />\n       \n       \n\n <ProductItem\n              key=\"_id\"\n              id=\"_id\"\n              title=\"name\"\n              text=\"description\"\n              price=\"price\"\n              imageUrl=\"image\"\n              onDelete={this.productDeleteHandler}\n           \n      />\n     \n\n    </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}