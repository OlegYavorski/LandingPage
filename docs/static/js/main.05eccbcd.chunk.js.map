{"version":3,"sources":["logo.svg","components/Products/ProductItem/ProductItem.js","components/Header/Header.js","components/Button/Button.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Products/Products.js","pages/Product/Products.js","pages/Product/Product.js","components/Input/Input.js","pages/Product/EditProduct.js","pages/Auth/Auth.js","pages/Auth/ConfirmAccount.js","components2/Header2/Header2.js","components2/Home/Home.js","components2/PlayerAPI.js","components2/Player/Player.js","components2/FullRoster/FullRoster.js","components2/Roster/Roster.js","components2/Schedule/Schedule.js","components2/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","productItem","props","react_default","a","createElement","className","style","backgroundImage","imageUrl","title","price","text","react_router_dom","to","id","onClick","onDelete","bind","header","links","onLogout","authenticated","button","Object","assign","children","modal","concat","open","Button_Button","type","onClose","backdrop","show","products","map","ProductItem_ProductItem","key","_id","name","description","image","onDeleteProduct","ProductsPage","state","isLoading","productDeleteHandler","productId","Stitch","defaultAppClient","getServiceClient","RemoteMongoClient","factory","db","collection","deleteOne","BSON","ObjectId","then","result","console","log","_this","fetchData","catch","err","onError","find","asArray","product","toString","setState","this","content","length","Products_Products","Component","ProductPage","_this2","match","params","productResponse","input","inputElement","config","onChange","elType","label","ProductEditPage","editProductHandler","event","preventDefault","trim","productData","Decimal128","fromString","mongodb","mode","updateOne","insertOne","history","replace","inputChangeHandler","defineProperty","target","value","_this3","onSubmit","Input_Input","rows","AuthPage","email","password","modeButtonText","submitButtonText","onAuthModeChange","onAuth","queryUrl","window","location","search","queryParams","URLSearchParams","token","get","tokenId","auth","getProviderClient","UserPasswordAuthProviderClient","confirmUser","Header2","Home","PlayerAPI","players","number","position","all","Player","player","parseInt","FullRoster","Roster","react_router","exact","path","component","Schedule","Main","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isAuth","authMode","error","authHandler","authData","request","emailPassClient","client","credential","UserPasswordCredential","loginWithCredential","registerWithEmail","errorHandler","authModeChangedHandler","prevState","message","initializeDefaultAppClient","routes","from","render","Product_EditProduct","Product_Product","Product_Products","ConfirmAccountPage","Auth_Auth","Modal_Modal","Backdrop_Backdrop","Header_Header","logoutHandler","Header2_Header2","Main_Main","src","logo","alt","href","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05eccbcd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ProductItem.css';\n\n\nconst productItem = props => (\n  <article className=\"product-item\">\n    <div\n      className=\"product-item__image\"\n      style={{ backgroundImage: \"url('\" + props.imageUrl + \"')\" }}\n    />\n    <div className=\"product-item__content\">\n      <h1>{props.title}</h1>\n      <h2>${props.price}</h2>\n      <p>{props.text}</p>\n      <div className=\"product-item__controls\">\n        <Link to={'/products/' + props.id}>Details</Link>\n        <Link to={'/products/' + props.id + '/edit'}>Edit</Link>\n        <button onClick={props.onDelete.bind(this, props.id)}>Delete</button>\n      </div>\n    </div>\n  </article>\n);\n\nexport default productItem;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.css';\n\nconst header = props => {\n  let links = (\n    <ul className=\"main-header__nav-items\">\n      <li className=\"main-header__nav-item\">\n        <NavLink to=\"/products\">Products</NavLink>\n      </li>\n      <li className=\"main-header__nav-item\">\n        <NavLink to=\"/product/add\">Add Product</NavLink>\n      </li>\n\n      <li className=\"main-header__nav-item\">\n        <button onClick={props.onLogout}>Logout</button>\n      </li>\n    </ul>\n  );\n\n  if (!props.authenticated) {\n    links = (\n      <ul className=\"main-header__nav-items\">\n        <li className=\"main-header__nav-item\">\n          <NavLink to=\"/auth\">Authenticate</NavLink>\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <header className=\"main-header\">\n      <nav className=\"main-header__nav\">{links}</nav>\n    </header>\n  );\n};\n\nexport default header;\n","import React from 'react';\n\nimport './Button.css';\n\nconst button = props => <button className=\"button\" {...props}>{props.children}</button>;\n\nexport default button;\n","import React from 'react';\n\nimport './Modal.css';\nimport Button from '../Button/Button';\n\nconst modal = props => (\n    <div className={`modal ${props.open ? 'open' : ''}`}>\n        <header className=\"modal__header\">\n            <h1>{props.title}</h1>\n        </header>\n        <section className=\"modal__content\">\n            {props.children}\n        </section>\n        <section className=\"modal__actions\">\n            <Button type=\"button\" onClick={props.onClose}>Okay</Button>\n        </section>\n    </div>\n);\n\nexport default modal;","import React from 'react';\n\nimport './Backdrop.css'\n\nconst backdrop = props => <div className={props.show ? 'backdrop show' : 'backdrop'} />;\n\nexport default backdrop;\n\n// 099-621-02-69 Саша Медитация","import React from 'react';\n\nimport ProductItem from './ProductItem/ProductItem';\n\nimport './Products.css';\n\nconst products = props => (\n  <section className=\"products\">\n    {props.products.map(p => (\n      <ProductItem\n        key={p._id}\n        id={p._id}\n        title={p.name}\n        text={p.description}\n        price={p.price}\n        imageUrl={p.image}\n        onDelete={props.onDeleteProduct}\n      />\n    ))}\n  </section>\n);\n\nexport default products;\n","import React, { Component } from 'react';\nimport {Stitch, RemoteMongoClient} from 'mongodb-stitch-browser-sdk'\nimport Products from '../../components/Products/Products';\nimport BSON from 'bson'\n\nclass ProductsPage extends Component {\n  state = { isLoading: true, products: [] };\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  productDeleteHandler = productId => {\n    const mongodb = Stitch.defaultAppClient.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n\n    mongodb\n      .db(\"shop\")\n      .collection(\"products\").deleteOne({_id : new BSON.ObjectId(productId)})\n      .then(result => {\n        console.log(result);\n        this.fetchData();\n      })\n      .catch(err => {\n        this.props.onError(\n          \"Deleting the product failed. Please try again later\"\n        );\n        console.log(err);\n      });\n          \n      // axios\n    //   .delete(\"http://localhost:3100/products/\" + productId)\n    //   .then(result => {\n    //     console.log(result);\n    //     this.fetchData();\n    //   })\n    //   .catch(err => {\n    //     this.props.onError(\n    //       \"Deleting the product failed. Please try again later\"\n    //     );\n    //     console.log(err);\n    //   });\n  };\n\n  fetchData = () => {\n    const mongodb = Stitch.defaultAppClient.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n\n    mongodb\n      .db(\"shop\")\n      .collection(\"products\")\n      .find() \n      .asArray()\n      .then(products => {\n        console.log('!!!!!!~~~~~~~', products);\n        const transformedProducts = products.map(product => {\n          product._id = product._id.toString();\n          product.price = product.price.toString();\n        });\n        this.setState({isLoading : false, products: products });\n      })\n      .catch(err => {\n        this.setState({isLoading : false });\n        this.props.onError(\n          \"Fetching the product failed. Please try again later\"\n        );\n      });\n\n    // axios\n    //   .get('http://localhost:3100/products')\n    //   .then(productsResponse => {\n    //     this.setState({ isLoading: false, products: productsResponse.data });\n    //   })\n    //   .catch(err => {\n    //     this.setState({ isLoading: false, products: [] });\n    //     this.props.onError('Loading products failed. Please try again later');\n    //     console.log(err);\n    //   });\n  };\n\n  render() {\n    let content = <p>Loading products...</p>;\n\n    if (!this.state.isLoading && this.state.products.length > 0) {\n      content = (\n        <Products\n          products={this.state.products}\n          onDeleteProduct={this.productDeleteHandler}\n        />\n      );\n    }\n    if (!this.state.isLoading && this.state.products.length === 0) {\n      content = <p>Found no products. Try again later.</p>;\n    }\n    return <main>{content}</main>;\n  }\n}\n\nexport default ProductsPage;\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport {Stitch, RemoteMongoClient} from 'mongodb-stitch-browser-sdk'\nimport BSON from 'bson'\n\nimport './Product.css';\n\nclass ProductPage extends Component {\n  state = { isLoading: true, product: null };\n\n  componentDidMount() {\n    const mongodb = Stitch.defaultAppClient.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n\n    mongodb\n      .db(\"shop\")\n      .collection(\"products\")\n      .find({_id : new BSON.ObjectId(this.props.match.params.id)})\n      .asArray()\n      .then(productResponse => {\n        const product = productResponse[0];\n        product._id = product._id.toString();\n        product.price = product.price.toString();\n\n            this.setState({ isLoading: false, product: product });\n          })\n          .catch(err => {\n            this.setState({ isLoading: false });\n            console.log(\"componentDidMount\",err);\n            this.props.onError('Loading the product failed. Please try again later');\n          });\n    // axios\n    //   .get('http://localhost:3100/products/' + this.props.match.params.id)\n    //   .then(productResponse => {\n    //     this.setState({ isLoading: false, product: productResponse.data });\n    //   })\n    //   .catch(err => {\n    //     this.setState({ isLoading: false });\n    //     console.log(err);\n    //     this.props.onError('Loading the product failed. Please try again later');\n    //   });\n  }\n\n  render() {\n    let content = <p>Is loading...</p>;\n\n    if (!this.state.isLoading && this.state.product) {\n      content = (\n        <main className=\"product-page\">\n          <h1>{this.state.product.name}</h1>\n          <h2>{this.state.product.price}</h2>\n          <div\n            className=\"product-page__image\"\n            style={{\n              backgroundImage: \"url('\" + this.state.product.image + \"')\"\n            }}\n          />\n          <p>{this.state.product.description}</p>\n        </main>\n      );\n    }\n    if (!this.state.isLoading && !this.state.product) {\n      content = (\n        <main>\n          <p>Found no product. Try again later.</p>\n        </main>\n      );\n    }\n    return content;\n  }\n}\n\nexport default ProductPage;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => {\n  let inputElement = <input {...props.config} onChange={props.onChange} />;\n  if (props.elType === 'textarea') {\n    inputElement = <textarea {...props.config} onChange={props.onChange} />;\n  }\n  return (\n    <div className=\"input\">\n      <label>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default input;\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport {Stitch, RemoteMongoClient} from 'mongodb-stitch-browser-sdk'\nimport BSON from 'bson'\n\nimport './EditProduct.css';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nclass ProductEditPage extends Component {\n  state = {\n    isLoading: true,\n    title: '',\n    price: '',\n    imageUrl: '',\n    description: ''\n  };\n\n  componentDidMount() {\n    // Will be \"edit\" or \"add\"\n    if (this.props.match.params.mode === 'edit') {\n      const mongodb = Stitch.defaultAppClient.getServiceClient(\n        RemoteMongoClient.factory,\n        \"mongodb-atlas\"\n      );\n  \n      mongodb\n        .db(\"shop\")\n        .collection(\"products\")\n        .find({_id : new BSON.ObjectId(this.props.match.params.id)})\n        .asArray()\n        .then(productResponse => {\n          const product = productResponse[0];\n          product._id = product._id.toString();\n          product.price = product.price.toString();\n  \n          this.setState({\n                  isLoading: false,\n                  title: product.name,\n                  price: product.price,\n                  imageUrl: product.image,\n                  description: product.description\n                });\n            })\n            .catch(err => {\n              this.setState({ isLoading: false });\n              console.log(err);\n              this.props.onError('Loading the product failed. Please try again later');\n            });\n      // axios\n      //   .get('http://localhost:3100/products/' + this.props.match.params.id)\n      //   .then(productResponse => {\n      //     const product = productResponse.data;\n      //     this.setState({\n      //       isLoading: false,\n      //       title: product.name,\n      //       price: product.price.toString(),\n      //       imageUrl: product.image,\n      //       description: product.description\n      //     });\n      //   })\n      //   .catch(err => {\n      //     this.setState({ isLoading: false });\n      //     console.log(err);\n      //   });\n    } else {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  editProductHandler = event => {\n    event.preventDefault();\n    if (\n      this.state.title.trim() === '' ||\n      this.state.price.trim() === '' ||\n      this.state.imageUrl.trim() === '' ||\n      this.state.description.trim() === ''\n    ) {\n      return;\n    }\n    this.setState({ isLoading: true });\n    const productData = {\n      name: this.state.title,\n      price: BSON.Decimal128.fromString(this.state.price.toString()),\n      image: this.state.imageUrl,\n      description: this.state.description\n    };\n    let request;\n\n    const mongodb = Stitch.defaultAppClient.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    if (this.props.match.params.mode === 'edit') {        \n      request = mongodb\n        .db(\"shop\")\n        .collection(\"products\")\n        .updateOne({_id : new BSON.ObjectId(this.props.match.params.id)}, productData);\n      // request = axios.patch(\n      //   'http://localhost:3100/products/' + this.props.match.params.id,\n      //   productData\n      // );\n    } else {\n      // request = axios.post('http://localhost:3100/products', productData);     \n      request = mongodb\n        .db(\"shop\")\n        .collection(\"products\")\n        .insertOne(productData);\n    }\n\n    request\n      .then(result => {\n        console.log(result);\n        this.setState({ isLoading: false });\n        this.props.history.replace('/products');\n      })\n      .catch(err => {\n        this.setState({ isLoading: false });\n        console.log(err);\n        this.props.onError(\n          'Editing or adding the product failed. Please try again later'\n        );\n      });\n  };\n\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n\n  render() {\n    let content = (\n      <form className=\"edit-product__form\" onSubmit={this.editProductHandler}>\n        <Input\n          label=\"Title\"\n          config={{ type: 'text', value: this.state.title }}\n          onChange={event => this.inputChangeHandler(event, 'title')}\n        />\n        <Input\n          label=\"Price\"\n          config={{ type: 'number', value: this.state.price }}\n          onChange={event => this.inputChangeHandler(event, 'price')}\n        />\n        <Input\n          label=\"Image URL\"\n          config={{ type: 'text', value: this.state.imageUrl }}\n          onChange={event => this.inputChangeHandler(event, 'imageUrl')}\n        />\n        <Input\n          label=\"Description\"\n          elType=\"textarea\"\n          config={{ rows: '5', value: this.state.description }}\n          onChange={event => this.inputChangeHandler(event, 'description')}\n        />\n        <Button type=\"submit\">\n          {this.props.match.params.mode === 'add'\n            ? 'Create Product'\n            : 'Update Product'}\n        </Button>\n      </form>\n    );\n    if (this.state.isLoading) {\n      content = <p>Is loading...</p>;\n    }\n    return <main>{content}</main>;\n  }\n}\n\nexport default ProductEditPage;\n","import React, { Component } from 'react';\n\nimport './Auth.css';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nclass AuthPage extends Component {\n  state = { email: '', password: '' };\n\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n\n  render() {\n    let modeButtonText = 'Switch to Signup';\n    let submitButtonText = 'Login';\n    if (this.props.mode === 'signup') {\n      modeButtonText = 'Switch to Login';\n      submitButtonText = 'Signup';\n    }\n    return (\n      <main>\n        <section className=\"auth__mode-control\">\n          <Button type=\"button\" onClick={this.props.onAuthModeChange}>\n            {modeButtonText}\n          </Button>\n        </section>\n        <form\n          className=\"auth__form\"\n          onSubmit={event =>\n            this.props.onAuth(event, {\n              email: this.state.email,\n              password: this.state.password\n            })\n          }\n        >\n          <Input\n            label=\"E-Mail\"\n            config={{ type: 'email' }}\n            onChange={event => this.inputChangeHandler(event, 'email')}\n          />\n          <Input\n            label=\"Password\"\n            config={{ type: 'password' }}\n            onChange={event => this.inputChangeHandler(event, 'password')}\n          />\n          <Button type=\"submit\">{submitButtonText}</Button>\n        </form>\n      </main>\n    );\n  }\n}\nexport default AuthPage;\n","import React, { Component } from 'react';\nimport { Stitch, UserPasswordAuthProviderClient } from 'mongodb-stitch-browser-sdk'\nimport './ConfirmAccount.css';\n\nclass AuthPage extends Component {\n  componentDidMount() {\n    const queryUrl = window.location.search;\n    const queryParams = new URLSearchParams(queryUrl);\n    const token = queryParams.get('token');\n    const tokenId = queryParams.get('tokenId');\n    const emailPassClient = Stitch.defaultAppClient.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n    emailPassClient.confirmUser(token, tokenId)\n    .then(()=>{\n      this.props.history.replace('/');\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log('Account confirmed');\n    this.props.history.replace('/');\n  }\n\n  render() {\n    return (\n      <main className=\"confirm-account-page\">\n        <p>Confirming Account...</p>\n      </main>\n    );\n  }\n}\nexport default AuthPage;\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Header2() {\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <ul>\r\n          <li><Link to='/'>Home</Link></li>\r\n          <li><Link to='/roster'>Roster</Link></li>\r\n          <li><Link to='/schedule'>Schedule</Link></li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\nexport default Header2;","import React from 'react';\r\n  function Home() {\r\n    return (\r\n      <div>\r\n        <h1>Welcome to the Tornadoes Website!</h1>\r\n      </div>\r\n    );\r\n  }\r\n  export default Home;","const PlayerAPI = {\r\n    players: [\r\n      { number: 1, name: \"Ben Blocker\", position: \"G\" },\r\n      { number: 2, name: \"Dave Defender\", position: \"D\" },\r\n      { number: 3, name: \"Sam Sweeper\", position: \"D\" },\r\n      { number: 4, name: \"Matt Midfielder\", position: \"M\" },\r\n      { number: 5, name: \"William Winger\", position: \"M\" },\r\n      { number: 6, name: \"Fillipe Forward\", position: \"F\" }\r\n    ],\r\n    all: function() { return this.players},\r\n    get: function(id) {\r\n      const isPlayer = p => p.number === id\r\n      return this.players.find(isPlayer)\r\n    }\r\n  }\r\n  \r\n  export default PlayerAPI","import React from \"react\";\r\n// an API that returns a player object\r\n// import PlayerAPI from '../PlayerAPI'\r\nimport PlayerAPI from \"../PlayerAPI\"\r\n\r\n\r\nfunction Player(props) {\r\n  // const player = PlayerAPI.get(\r\n  //   parseInt(props.match.params.number, 10)\r\n  // )\r\n  const player = PlayerAPI.get(parseInt(props.match.params.number , 10))\r\n  \r\n\r\n  if (!player) {\r\n    return <div>Sorry, but the player was not found</div>\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>{player.name} (#{player.number})</h1>\r\n      <h2>{player.position}</h2>\r\n    </div>\r\n  );\r\n}\r\nexport default Player;","import React from \"react\";\r\nimport Player from \"../Player/Player\"\r\nimport { Link } from 'react-router-dom'\r\nimport PlayerAPI from \"../PlayerAPI\"\r\n\r\nfunction FullRoster() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {\r\n              PlayerAPI.all().map(p => (\r\n\r\n              <li key={p.number}>\r\n                <Link to={`/roster/${p.number}`}>{p.name}</Link>\r\n              </li>\r\n            ))\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  export default FullRoster;\r\n  \r\n  ","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport FullRoster from \"../FullRoster/FullRoster\"\r\nimport Player from \"../Player/Player\"\r\n\r\nfunction Roster() {\r\n    return (\r\n      <div>\r\n        <h2>This is a roster page!</h2>\r\n        <Switch>\r\n          <Route exact path='/roster' component={FullRoster}/>\r\n          <Route path='/roster/:number' component={Player}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n  export default Roster;","import React from 'react';\r\n  function Schedule() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          <li>6/5 @ Evergreens</li>\r\n          <li>6/8 vs Kickers</li>\r\n          <li>6/14 @ United</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  export default Schedule;","import React from \"react\";\r\nimport Home from \"../Home/Home\"\r\nimport Roster from \"../Roster/Roster\"\r\nimport Schedule from \"../Schedule/Schedule\"\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nfunction Main() {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <Route path='/roster' component={Roster}/>\r\n        <Route path='/schedule' component={Schedule}/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\nexport default Main;","import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport ProductItem from './components/Products/ProductItem/ProductItem';\nimport { Link } from 'react-router-dom';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/Header/Header\";\nimport Modal from \"./components/Modal/Modal\";\nimport Backdrop from \"./components/Backdrop/Backdrop\";\nimport ProductsPage from \"./pages/Product/Products\";\nimport ProductPage from \"./pages/Product/Product\";\nimport EditProductPage from \"./pages/Product/EditProduct\";\nimport AuthPage from \"./pages/Auth/Auth\";\nimport ConfirmAccountPage from \"./pages/Auth/ConfirmAccount\";\n\nimport Header2 from './components2/Header2/Header2';\nimport Main from './components2/Main/Main';\n\nimport {\n  Stitch,\n  UserPasswordAuthProviderClient,\n  UserPasswordCredential\n} from \"mongodb-stitch-browser-sdk\";\n\n\nclass App extends Component {\n  \n   state = {\n    // isAuth: true,\n    isAuth: false,\n    authMode: \"login\",\n    error : null \n    //error: 'Test for error'\n  };\n\n  constructor() {\n    super();\n    this.client = Stitch.initializeDefaultAppClient(\"processstudio-lwtbf\");\n    console.log('constructor !!!')\n    //this.client.callFunction('Greet', ['Max']);\n  }\n  \n  authHandler = (event, authData) => {\n    event.preventDefault();\n    if (authData.email.trim() === \"\" || authData.password.trim() === \"\") {\n      return;\n    }\n    let request;\n\n    const emailPassClient = this.client.auth.getProviderClient(\n      UserPasswordAuthProviderClient.factory\n    );\n\n    if (this.state.authMode === \"login\") {\n      const credential = new UserPasswordCredential(\n        authData.email,\n        authData.password\n      );\n      request = this.client.auth.loginWithCredential(credential);\n    } else {\n      request = emailPassClient.registerWithEmail(\n        authData.email,\n        authData.password\n      );\n    }\n\n    request\n      .then(result => {\n        console.log(result);\n        if (result){\n          this.setState({isAuth : true});\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.errorHandler(\"An error occurred.\");\n        console.log(err);\n        this.setState({ isAuth: false });\n      });    \n  };\n\n  authModeChangedHandler = () => {\n    this.setState(prevState => {\n      return {\n        authMode: prevState.authMode === \"login\" ? \"signup\" : \"login\"\n      };\n    });\n  };\n\n\n  // logoutHandler = () => {\n  //   this.setState({ isAuth: false });\n  // };\n\n  // productDeleteHandler = productId => {\n  //   alert('productDeleteHandler')\n  // };\n\n  // inputChangeHandler = (event, input) => {\n  //   this.setState({ [input]: event.target.value });\n  // };\n\n  errorHandler = message => {\n    this.setState({\n      error: message\n    });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Redirect from=\"/\" to=\"/products\" exact />\n        <Redirect from=\"/auth\" to=\"/products\" exact />\n        <Redirect from=\"/signup\" to=\"/products\" exact />\n        <Route\n          path=\"/product/:mode\"\n          render={props => (\n            <EditProductPage {...props} onError={this.errorHandler} />\n          )}\n        />\n        <Route\n          path=\"/products/:id/:mode\"\n          render={props => (\n            <EditProductPage {...props} onError={this.errorHandler} />\n          )}\n        />\n        <Route\n          path=\"/products/:id\"\n          render={props => (\n            <ProductPage {...props} onError={this.errorHandler} />\n          )}\n        />\n        <Route\n          path=\"/products\"\n          render={props => (\n            <ProductsPage {...props} onError={this.errorHandler} />\n          )}\n        />\n      </Switch>\n    );\n\n    if (!this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Redirect from=\"/\" to=\"/auth\" exact />\n          <Redirect from=\"/products\" to=\"/auth\" />\n          <Redirect from=\"/product\" to=\"/auth\" />\n          <Route path=\"/confirm-account\" component={ConfirmAccountPage} />\n          <Route\n            path=\"/auth\"\n            render={() => (\n              <AuthPage\n                mode={this.state.authMode}\n                onAuth={this.authHandler}\n                onAuthModeChange={this.authModeChangedHandler}\n              />\n            )}\n          />\n        </Switch>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <Modal\n          open={!!this.state.error}\n          title=\"An Error Occurred\"\n          onClose={() => this.errorHandler(null)}\n        >\n          <p>{this.state.error}</p>\n        </Modal>\n        <Backdrop show={!!this.state.error} />\n        <Header\n          authenticated={this.state.isAuth}\n          onLogout={this.logoutHandler}\n        />\n        {routes}\n      </div>\n    );\n  }\n\nrender2() {  \n  return (\n    <div className=\"App\">\n\n    <div>\n      <Header2 />\n      <Main />\n    </div>\n    \n      <header className=\"App-header\">\n\n        <Backdrop show={!!this.state.error} />\n        {/* <Button type=\"button\">Okay1</Button> */}\n\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a className=\"App-link\" href = \"E:\\GitHub\\LandingPage\">E:\\GitHub\\LandingPage\\</a>\n        <a className=\"App-link\" href=\"E:\\landingpage\">E:\\landingpage</a>\n        <a className=\"App-link\" href=\"E:\\MyMongoDB\">E:\\MyMongoDB</a>\n        <a className=\"App-link\" href=\"E:\\MongoUdemyMax/18\\stitch-01-starting-code\">E:\\MongoUdemyMax/18\\stitch-01-starting-code</a>\n        \n      </header>\n      <Modal\n          open={!!this.state.error}\n          title=\"An Error Occurred\"\n          onClose={() => this.errorHandler(null)}\n        >\n          <p>{this.state.error}</p>\n        </Modal>\n\n        {/* <Input\n            label=\"E-Mail\"\n            config={{ type: 'email' }}\n            onChange={event => this.inputChangeHandler(event, 'email')}\n          /> */}\n       \n       \n{/* \n <ProductItem\n              key=\"_id\"\n              id=\"_id\"\n              title=\"name\"\n              text=\"description\"\n              price=\"price\"\n              imageUrl=\"image\"\n              onDelete={this.productDeleteHandler}\n           \n      /> */}\n     \n\n    </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n  );\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}